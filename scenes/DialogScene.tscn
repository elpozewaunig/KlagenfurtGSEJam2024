[gd_scene load_steps=3 format=3 uid="uid://dgurl1u1gb0ly"]

[ext_resource type="PackedScene" uid="uid://dvygun7k256ji" path="res://scenes/HudOverlay.tscn" id="1_hnrpo"]

[sub_resource type="GDScript" id="GDScript_qletp"]
script/source = "extends Control

signal dialogCompleted()

@export var player: Texture;
@export var enemy: Texture;

@onready var hudOverlay: Control = $HudOverlay
@onready var playerSprite: Sprite2D = $CanvasLayer/PlayerSprite
@onready var enemySprite: Sprite2D = $CanvasLayer/EnemySprite

var PLAYER_START_POSITION: Vector2 = Vector2(-650,1230)
var ENEMY_START_POSITION: Vector2 = Vector2(2500,1230)
var PLAYER_END_POSITION: Vector2 = Vector2(200,1230)
var ENEMY_END_POSITION: Vector2 = Vector2(1600,1230)

var currentSprite: Sprite2D;
var speed: float = 25.0 # Pixel pro Sekunde
var amplitude: float = 5.0
var time: float = 0.0
var start_y: float;

# Called when the node enters the scene tree for the first time.
func showDialog(dialogOptions: Array[DialogOption]) -> void:
	playerSprite.position = PLAYER_START_POSITION
	enemySprite.position = ENEMY_START_POSITION
	playerSprite.texture = player;
	enemySprite.texture = enemy;
	hudOverlay.showDialog(dialogOptions, false)
	
func _physics_process(delta: float) -> void:
	playerSprite.position = lerp(playerSprite.position, PLAYER_END_POSITION , 3 * delta)
	enemySprite.position = lerp(enemySprite.position, ENEMY_END_POSITION, 3 * delta)
	if currentSprite != null:
		# move sprite slightly up and down to mimic talking
		time += delta * speed
		currentSprite.position.y = start_y + sin(time) * amplitude
		

func _on_hud_overlay_current_entity(entity: DialogOption.DIALOG_ENTITY) -> void:
	if currentSprite != null:
		currentSprite.position = PLAYER_END_POSITION if currentSprite == playerSprite else ENEMY_END_POSITION
	if entity == DialogOption.DIALOG_ENTITY.NARRATOR:
		currentSprite = null
		return
	currentSprite = playerSprite if entity == DialogOption.DIALOG_ENTITY.PLAYER else enemySprite
	start_y = currentSprite.position.y


func _on_hud_overlay_dialog_completed() -> void:
	if currentSprite != null:
		currentSprite.position = PLAYER_END_POSITION if currentSprite == playerSprite else ENEMY_END_POSITION
		currentSprite = null
	dialogCompleted.emit()

	
func setPlayerEndPosition(vector: Vector2) -> void:
	PLAYER_END_POSITION = vector 


func setEnemyEndPosition(vector: Vector2) -> void:
	ENEMY_END_POSITION = vector


func setPlayerStartPosition(vector: Vector2) -> void:
	PLAYER_START_POSITION = vector 


func setEnemyStartPosition(vector: Vector2) -> void:
	ENEMY_START_POSITION = vector 		
"

[node name="DialogScene" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_qletp")

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="ColorRect" type="ColorRect" parent="CanvasLayer"]
z_index = -1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0, 0, 0, 0.733333)

[node name="PlayerSprite" type="Sprite2D" parent="CanvasLayer"]
z_index = 1
position = Vector2(-650, 1230)

[node name="EnemySprite" type="Sprite2D" parent="CanvasLayer"]
z_index = 1
position = Vector2(2500, 1230)

[node name="HudOverlay" parent="." instance=ExtResource("1_hnrpo")]
z_index = 10
layout_mode = 1

[connection signal="currentEntity" from="HudOverlay" to="." method="_on_hud_overlay_current_entity"]
[connection signal="dialogCompleted" from="HudOverlay" to="." method="_on_hud_overlay_dialog_completed"]
